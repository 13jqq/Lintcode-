public class Solution {
    /**
     * @param A: A string
     * @param B: A string
     * @return: the length of the longest common substring.
     */
    public static int longestCommonSubstring(String A, String B) {
        // write your code here
		List<String> listA = subStr(A);
		List<String> listB = subStr(B);
		List<String> resList = new ArrayList<String>();
		for( int i = 0; i < listA.size() ; i++){
			if( listB.contains(listA.get(i))){
				resList.add(listA.get(i));
			}
		}
		int max = 0;
		for( int i = 0 ; i < resList.size() ; i ++){
			if( resList.get(i).length() > max){
				max = resList.get(i).length();
			}
		}
		return max;
		
    }
	
	
	public static List<String> subStr( String s){
		List<String > list = new ArrayList<String>();
		if( s == null ){
			return list;
		}
		if( s .length() == 0){
			list.add("");
			return list;
		}
		//String subStr = "";
		for( int i = 0 ; i <= s.length() ; i++){
			//subStr ="";
			subSS(s , 0 , i, list);
		}
		return list;
		
	}
	public static void subSS(String s , int start , int size  ,List<String > list){
		if( s== null || s.length() == 0){
			return ;
		}
		if( start + size <= s.length()){
			String sub = s.substring(start , start + size);
		    list.add(sub);
		    subSS(s , start + 1 , size , list);
		}
		else{
			return ;
		}
		
		
		
		
	}
}
