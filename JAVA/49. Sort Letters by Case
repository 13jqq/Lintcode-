public class Solution {
    /*
     * @param chars: The letter array you should sort by Case
     * @return: nothing
     */
     public static void qSort( char[] A , int left , int right){
			  if( left > right){
				  return ;
			  }
			  int i = left ; 
			  int j = right;
			  char tmp = A[left];
			  char t;
			  while( i < j){
				  while( A[j] >= tmp && i < j){
					  j -- ;
				  }
				  while( A[i ] <= tmp && i < j){
					  i ++;
				  }
				  if(  i< j ){
					  t = A [i];
					  A[i ] = A[ j];
					  A[j ] = t;
				  }
			  }
			  A[left] = A [i];
			  A[i]  = tmp;
			  qSort(A , left , j - 1);
			  qSort(A , j + 1 , right);
		  }
   public void sortLetters(char[] chars) {
		        // write your code here
			  if( chars == null || chars.length == 0){
				  return ;
			  }
			  qSort( chars , 0 ,chars.length - 1);
			  List<Character> list = new LinkedList<Character>();
			  for( int i = 0 ; i < chars.length ; i ++){
				  list.add(chars[i]);
			  }
			  Collections.reverse(list);
			  for( int i = 0 ;i < chars.length ; i++){
				  chars[i] = list.get(i);
			  }
		  }
}

