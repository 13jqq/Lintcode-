public class Solution {

    /*
     * @param nums: A set of numbers
     * @return: A list of lists
     */
    public static List<List<Integer>> subsets(int[] nums) {
        // write your code here
		List<List<Integer>> res = new ArrayList<List<Integer>>();
		if( nums == null ){
			return res;
		}
		Arrays.sort(nums);
		List<Integer> list = new ArrayList<Integer>();
		if( nums.length == 0){
			res.add( list);
			return res;
		}
		for( int i = 0 ; i<= nums.length ; i++){
			list.clear();
			dfsSub(nums , 0 ,i ,list , res );
		}
		return res;
	}
	public static void dfsSub(int[] nums , int start , int size , List<Integer> list , List<List<Integer>> res ){
		if( nums == null || nums.length == 0){
			return ;
		}
		if( list.size() == size){
			res.add(new ArrayList<Integer>(list));		
			return;
		}
		for( int i = start ; i< nums.length ; i++){
			list.add(nums[i]);
			dfsSub(nums , i + 1 , size , list , res);
			list.remove(list.size() - 1);
		}
	}
	
}
