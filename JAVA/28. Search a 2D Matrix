public class Solution {
    /*
     * @param matrix: matrix, a list of lists of integers
     * @param target: An integer
     * @return: a boolean, indicate whether matrix contains target
     */
    public boolean searchMatrix(int[][] matrix, int target) {
	        // write your code here
		  
		  if( matrix == null || matrix .length == 0){
			  return false;
		  }
		  
		  if( matrix[0].length == 0 || matrix[0] == null ){
			  return false;
		  }
		  if( matrix[0][0] > target){
			  return false;
		  }
		  int row = matrix.length ;//行数
          int column = matrix[0].length; // 列，，每行有的元素个数
          int index = -1 ; // 记录所在行
          for( int i = 0 ; i < row ; i ++ ){
        	  if( target <= matrix[i][column - 1]){
        		  index = i;
        		  break;
        	  }
          }
          if( index == -1){
        	  return false;
          }
          
          if( matrix[index][0] == target || matrix[index][column - 1] == target){
        	  return true;
          }  
          if( matrix[index][0] > target ){
        	  return false;
          }
          int min = 0;
          int max = column - 1;
          int mid = min + ( max - min ) / 2;
          while( min < max){
        	  if( matrix[index][mid] == target){
        		  return true;
        	  }
        	  if( matrix[index][mid] < target){
        		  min = mid + 1;
        		  
        	  }else  if( matrix[index][mid] > target ){
        		  max = mid - 1;
        	  }
        	  
        	  mid = min + ( max - min ) / 2;
          }
          if( matrix[index][min] == target || matrix[index][max] == target){
        	  return true;
          }
          return false;
	    }
}	
