/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */


public class Solution {
    /*
     * @param root: A Tree
     * @return: A list of lists of integer include the zigzag level order traversal of its nodes' values.
     */
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
	        // write your code here
		  List<List<Integer>> result = new ArrayList<List<Integer>>();
		  if( root == null ){
			  return result;
		  }
		  
		  Queue<TreeNode> queue = new LinkedList<TreeNode>();
		  queue.offer(root);
		  boolean flag = true;//判断是左右
		  while( !queue.isEmpty()){
			  List<Integer> list = new ArrayList<Integer>();
			  int size = queue.size();
			  for( int i= 0 ; i < size ; i  ++){
				  TreeNode node = queue.poll();
				  list.add(node.val);
				  if( node.left != null ){
					  queue.offer(node.left);
				  }
				  if( node.right != null){
					  queue.offer(node.right);
				  }
			  }
			  if( !flag){
				  Collections.reverse(list);
				  
			  }
			  result.add(list);
			  flag = !flag;
		  }
		  return result;
	    }
	  
	  
}	
